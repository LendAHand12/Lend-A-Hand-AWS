import"./is-my-json-valid-2c93b9e3.js";import{a}from"./web3-validator-6b520267.js";import{aa as h}from"./web3-errors-484f11ce.js";import"./web3-types-ce0eb23a.js";import{y as d,w as u,J as l}from"./web3-utils-f506bce1.js";class r{constructor(t){if(this.toAddress=()=>{if(this.isDirect()){const e=this._iban.slice(4),i=r._parseInt(e,36),n=d(i,40);return u(n)}throw new Error("Iban is indirect and cannot be converted. Must be length of 34 or 35")},r.isIndirect(t)||r.isDirect(t))this._iban=t;else throw new Error("Invalid IBAN was provided")}static isDirect(t){return t.length===34||t.length===35}isDirect(){return r.isDirect(this._iban)}static isIndirect(t){return t.length===20}isIndirect(){return r.isIndirect(this._iban)}static isValid(t){return/^XE[0-9]{2}(ETH[0-9A-Z]{13}|[0-9A-Z]{30,31})$/.test(t)&&r._mod9710(r._iso13616Prepare(t))===1}isValid(){return r.isValid(this._iban)}static fromBban(t){const e="XE",n=`0${(98-this._mod9710(this._iso13616Prepare(`${e}00${t}`))).toString()}`.slice(-2);return new r(`${e}${n}${t}`)}static createIndirect(t){return r.fromBban(`ETH${t.institution}${t.identifier}`)}static fromAddress(t){if(!a(t))throw new h(t);const i=BigInt(l(t)).toString(36),n=d(i,15);return r.fromBban(n.toUpperCase())}static toIban(t){return r.fromAddress(t).toString()}client(){return this.isIndirect()?this._iban.slice(11):""}checksum(){return this._iban.slice(2,4)}institution(){return this.isIndirect()?this._iban.slice(7,11):""}toString(){return this._iban}}r._iso13616Prepare=s=>{const t="A".charCodeAt(0),e="Z".charCodeAt(0),i=s.toUpperCase();return`${i.slice(4)}${i.slice(0,4)}`.split("").map(c=>{const o=c.charCodeAt(0);return o>=t&&o<=e?o-t+10:c}).join("")};r._parseInt=(s,t)=>[...s].reduce((e,i)=>BigInt(parseInt(i,t))+BigInt(t)*e,BigInt(0));r._mod9710=s=>{let t=s,e;for(;t.length>2;)e=t.slice(0,9),t=`${(parseInt(e,10)%97).toString()}${t.slice(e.length)}`;return parseInt(t,10)%97};r.toAddress=s=>new r(s).toAddress();export{r as I};
